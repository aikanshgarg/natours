/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before {
	margin: 0;
	padding: 0;
	box-sizing: inherit; /*so that all elements inherit this ppty*/
}

html {
	/*font-size: 10px;*/ /*root font size: 1rem = 10px*/
	font-size: 62.5%; /*wrt to default of browser, in general 16px*/
}

body {
	font-family: "Lato", sans-serif;
	font-weight: 400;
	/*font-size: 16px;*/
	line-height: 1.7;
	color: #777;
	padding: 3rem;
	box-sizing: border-box; /*so that padding and margin are not added to elements height & width*/
}

.header {
	height: 95vh;
	background-image: linear-gradient(to right bottom, rgba(126,213,111,0.8), rgba(40,180,131,0.8)), url(../img/hero.jpg);
	background-size: cover;
	background-position: top; /*the top of image remains same on all viewports, while the bottom gets cropped on enlarging*/
	clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /*start from top left and move clockwise*/ 
	position: relative;
}

.header__logo-box {
	position: absolute;
	top: 4rem; /*reference of these distances is the parent element(header) with property relative */
	left: 4rem;
}

.header__logo {
	height: 3.5rem;
}

.header__text-box {
	position: absolute; /*to center the box wrt to parent*/
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%); /*these % are wrt to element itself*/ 
	text-align: center; /*to center the btn*/
}

.heading-primary {
	color: #fff;
	text-transform: uppercase;

	backface-visibility: hidden; /*hack: to prevent little shaking of animation*/
	margin-bottom: 6rem;
}

.heading-primary--main { 
	display: block; /*to make both headings appear below each other*/
	font-size: 6rem;
	font-weight: 400;
	letter-spacing: 3.5rem;

	animation-name: moveInLeft;
	animation-duration: 1s;
	animation-timing-function: ease-out;
	/*
	animation-delay: 3s;
	animation-iteration-count: 3;
	*/
}

.heading-primary--sub {
	display: block;
	font-size: 2rem;
	font-weight: 700;
	letter-spacing: 1.75rem;
	animation: moveInRight 1s ease-out;

}

@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-10rem);
	}

	80% {
		transform: translateX(1rem);
	}

	100% {
		opacity: 1;
		transform: translate(0);
	}
}

@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(10rem);
	}

	80% {
		transform: translateX(-1rem);
	}

	100% {
		opacity: 1;
		transform: translate(0);
	}
}

@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(3rem);
	}

	100% {
		opacity: 1;
		transform: translate(0);
	}
}

/*Pseudo-class*/
.btn:link,
.btn:visited {
	text-transform: uppercase;
	text-decoration: none;
	padding: 1.5rem 4rem; /*tb rl*/
	display: inline-block; /*in order to change the default inline display of text(anchor tag)*/
	border-radius: 10rem;
	transition: all .2s; /*animation*/
	position: relative; /*parent of pseudo (after) element*/
	font-size: 1.6rem;
}

.btn:hover { 
	transform: translateY(-.3rem); /*move 3px up*/
	box-shadow: 0 1rem 2rem rgba(0,0,0,0.2) /*x y blur color*/
}

.btn:active { /*on click*/
	transform: translateY(-.1rem);
	box-shadow: 0 .5rem 1rem rgba(0,0,0,0.2) /*reducing size of shadow on y-axis & blur value, to give effect of being closer*/
}

.btn--white {
	background-color: #fff;
	color: #777;
}

/*after: creating a psuedo element(same as .btn with no content and a bg color), child of .btn, hide/unhide it on hover*/
.btn::after {
	content: ""; /*required*/
	display: inline-block; /*required*/
	height: 100%; /*wrt to parent- .btn*/ 
	width: 100%; /*wrt to parent- .btn*/
	border-radius: 10rem;
	position: absolute; /*to hide behind .btn*/
	top: 0; /*wrt position relative of parent: .btn*/
	left: 0; /*wrt position relative of parent: .btn*/
	z-index: -1; /*hide after element behind .btn (stack)*/
	transition: all .4s; /*animation*/
}

/*grow & fadout effect changes bg color for different btns*/
.btn--white::after {
	background-color: #fff;
}

/*an 'after' pseudo element which appears only on .btn hover: we want the btn to grow and fade out, on hover*/
.btn:hover::after {
	transform: scaleX(1.4) scaleY(1.6); /*grow bigger*/
	opacity: 0; /*fade out animation, comes .btn::after transition*/
}

.btn--animated {
	animation: moveInBottom .5s ease-out .75s; /*.75s is delay*/
	animation-fill-mode: backwards; /*automatically applies style of 0% of animation(line 117) before start*/
}